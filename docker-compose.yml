version: '3'
services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command:
      - gunicorn
      - "--bind"
      - "0:8000"
      - "config.wsgi:application"
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/backend/
      - ./backend/static/:/backend/static/
    networks:
      - app-tier
    expose:
      - 8000

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    links:
      - alertmanager:alertmanager
    depends_on:
      - backend
    networks:
      - app-tier

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
      - ./datasource.yml:/etc/grafana/provisioning/datasource.yml
    networks:
      - app-tier
    depends_on:
      - prometheus
      - backend
      
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    expose:
      - 80
      - 443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/log:/var/log/nginx
      - ./backend/static/:/backend/static/
    networks:
      - app-tier
    depends_on:
      - backend
    restart: always

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    expose:
      - 9100
    restart: always
    networks:
      - app-tier

  alertmanager:
    image: prom/alertmanager
    container_name: alert-manager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - app-tier
    restart: always
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"

  redis:
    image: redis:alpine
    command: redis-server --port 6379
    ports:
      - 6379:6379
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge
